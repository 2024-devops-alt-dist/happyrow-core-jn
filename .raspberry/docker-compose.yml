version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: happyrow-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-happyrow_db}
      POSTGRES_USER: ${DB_USERNAME:-happyrow_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - happyrow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-happyrow_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Raspberry Pi optimizations
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # HappyRow Core Backend (Ktor)
  backend:
    build:
      context: ..
      dockerfile: .raspberry/Dockerfile
    container_name: happyrow-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Database Configuration
      DATABASE_URL: postgresql://${DB_USERNAME:-happyrow_user}:${DB_PASSWORD}@postgres:5432/${DB_NAME:-happyrow_db}
      DB_USERNAME: ${DB_USERNAME:-happyrow_user}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_MAX_POOL_SIZE: 5
      DB_CONNECTION_TIMEOUT: 30000
      DB_IDLE_TIMEOUT: 600000
      DB_MAX_LIFETIME: 1800000
      DB_SSL_MODE: disable
      
      # Application Configuration
      ENVIRONMENT: production
      KTOR_ENV: production
      PORT: 8080
      
      # CORS Configuration (Vercel frontend)
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-https://your-app.vercel.app}
    networks:
      - happyrow-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Raspberry Pi optimizations
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # NGINX Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: happyrow-nginx
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    networks:
      - happyrow-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 64M

  # Cloudflare Tunnel
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: happyrow-cloudflared
    restart: unless-stopped
    depends_on:
      - nginx
    command: tunnel run
    environment:
      TUNNEL_TOKEN: ${CLOUDFLARE_TUNNEL_TOKEN}
    networks:
      - happyrow-network
    deploy:
      resources:
        limits:
          memory: 64M

networks:
  happyrow-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  nginx_cache:
    driver: local
